From 0b83d43c54141773ae5183c393fca317defec91e Mon Sep 17 00:00:00 2001
From: Daniel Stone <daniels@collabora.com>
Date: Fri, 4 Nov 2016 16:17:39 +0000
Subject: [PATCH 49/94] compositor-drm: Clean up page_flip_pending path

page_flip_pending is only be set when do a pageflip to a newly-rendered
buffer; if the flag is not set, we have landed in the start_repaint_loop
path where the vblank query fails, and thus we must pageflip to the same
buffer.

This test was not sufficient for what it was supposed to guard:
releasing framebuffers back. When using client-supplied framebuffers, it
is possible to reuse the same buffer multiple times, and we would send a
framebuffer-release event too early.

However, since we have a properly reference-counted drm_fb now, we can
just drop this test, and rely on the reference counting to prevent
too-early release of client framebuffers.

page_flip_pending now becomes exactly what the name suggests: a flag
which indicates whether or not we are expecting a pageflip event. Add
asserts here to verify that we never receive a pageflip event we weren't
expecting.

Signed-off-by: Daniel Stone <daniels@collabora.com>

Differential Revision: https://phabricator.freedesktop.org/D1417
---
 src/compositor-drm.c | 19 +++++++++++--------
 1 file changed, 11 insertions(+), 8 deletions(-)

diff --git a/src/compositor-drm.c b/src/compositor-drm.c
index c705c43..66de139 100644
--- a/src/compositor-drm.c
+++ b/src/compositor-drm.c
@@ -799,6 +799,7 @@ drm_output_repaint(struct weston_output *output_base,
 	output->fb_current = output->fb_pending;
 	output->fb_pending = NULL;
 
+	assert(!output->page_flip_pending);
 	output->page_flip_pending = 1;
 
 	drm_output_set_cursor(output);
@@ -920,12 +921,18 @@ drm_output_start_repaint_loop(struct weston_output *output_base)
 	 */
 	fb_id = output->fb_current->fb_id;
 
+	assert(!output->page_flip_pending);
+	assert(!output->fb_last);
+
 	if (drmModePageFlip(backend->drm.fd, output->crtc_id, fb_id,
 			    DRM_MODE_PAGE_FLIP_EVENT, output) < 0) {
 		weston_log("queueing pageflip failed: %m\n");
 		goto finish_frame;
 	}
 
+	output->fb_last = drm_fb_ref(output->fb_current);
+	output->page_flip_pending = 1;
+
 	return;
 
 finish_frame:
@@ -985,16 +992,12 @@ page_flip_handler(int fd, unsigned int frame,
 
 	drm_output_update_msc(output, frame);
 
-	/* We don't set page_flip_pending on start_repaint_loop, in that case
-	 * we just want to page flip to the current buffer to get an accurate
-	 * timestamp */
-	if (output->page_flip_pending) {
-		drm_fb_unref(output->fb_last);
-		output->fb_last = NULL;
-	}
-
+	assert(output->page_flip_pending);
 	output->page_flip_pending = 0;
 
+	drm_fb_unref(output->fb_last);
+	output->fb_last = NULL;
+
 	if (output->destroy_pending)
 		drm_output_destroy(&output->base);
 	else if (!output->vblank_pending) {
-- 
1.9.1

