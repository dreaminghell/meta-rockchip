From f04b556d3b856a7cf1a49cac4a11894b17ec01e4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Armin=20Krezovi=C4=87?= <krezovic.armin@gmail.com>
Date: Fri, 5 Aug 2016 15:54:18 +0200
Subject: [PATCH 05/94] compositor-drm: Use non-cast functions to retrieve
 backend and output objects
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This uses container_of instead of explicit cast to retrieve
backend and output objects from generic weston_backend and
weston_output pointers.

v2:

- Remove unneeded cast
- Remove unneeded line breaks

Signed-off-by: Armin KrezoviÄ‡ <krezovic.armin@gmail.com>
Reviewed-by: Pekka Paalanen <pekka.paalanen@collabora.co.uk>
---
 src/compositor-drm.c | 74 ++++++++++++++++++++++++++++------------------------
 1 file changed, 40 insertions(+), 34 deletions(-)

diff --git a/src/compositor-drm.c b/src/compositor-drm.c
index bd0fc1b..92c915b 100644
--- a/src/compositor-drm.c
+++ b/src/compositor-drm.c
@@ -223,6 +223,18 @@ static struct gl_renderer_interface *gl_renderer;
 
 static const char default_seat[] = "seat0";
 
+static inline struct drm_output *
+to_drm_output(struct weston_output *base)
+{
+	return container_of(base, struct drm_output, base);
+}
+
+static inline struct drm_backend *
+to_drm_backend(struct weston_compositor *base)
+{
+	return container_of(base->backend, struct drm_backend, base);
+}
+
 static void
 drm_output_set_cursor(struct drm_output *output);
 
@@ -233,7 +245,7 @@ static int
 drm_sprite_crtc_supported(struct drm_output *output, uint32_t supported)
 {
 	struct weston_compositor *ec = output->base.compositor;
-	struct drm_backend *b =(struct drm_backend *)ec->backend;
+	struct drm_backend *b = to_drm_backend(ec);
 	int crtc;
 
 	for (crtc = 0; crtc < b->num_crtcs; crtc++) {
@@ -469,8 +481,7 @@ static struct weston_plane *
 drm_output_prepare_scanout_view(struct drm_output *output,
 				struct weston_view *ev)
 {
-	struct drm_backend *b =
-		(struct drm_backend *)output->base.compositor->backend;
+	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	struct weston_buffer *buffer = ev->surface->buffer_ref.buffer;
 	struct weston_buffer_viewport *viewport = &ev->surface->buffer_viewport;
 	struct gbm_bo *bo;
@@ -515,8 +526,7 @@ drm_output_prepare_scanout_view(struct drm_output *output,
 static void
 drm_output_render_gl(struct drm_output *output, pixman_region32_t *damage)
 {
-	struct drm_backend *b =
-		(struct drm_backend *)output->base.compositor->backend;
+	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	struct gbm_bo *bo;
 
 	output->base.compositor->renderer->repaint_output(&output->base,
@@ -566,7 +576,7 @@ static void
 drm_output_render(struct drm_output *output, pixman_region32_t *damage)
 {
 	struct weston_compositor *c = output->base.compositor;
-	struct drm_backend *b = (struct drm_backend *)c->backend;
+	struct drm_backend *b = to_drm_backend(c);
 
 	if (b->use_pixman)
 		drm_output_render_pixman(output, damage);
@@ -582,9 +592,9 @@ drm_output_set_gamma(struct weston_output *output_base,
 		     uint16_t size, uint16_t *r, uint16_t *g, uint16_t *b)
 {
 	int rc;
-	struct drm_output *output = (struct drm_output *) output_base;
+	struct drm_output *output = to_drm_output(output_base);
 	struct drm_backend *backend =
-		(struct drm_backend *) output->base.compositor->backend;
+		to_drm_backend(output->base.compositor);
 
 	/* check */
 	if (output_base->gamma_size != size)
@@ -628,9 +638,9 @@ static int
 drm_output_repaint(struct weston_output *output_base,
 		   pixman_region32_t *damage)
 {
-	struct drm_output *output = (struct drm_output *) output_base;
+	struct drm_output *output = to_drm_output(output_base);
 	struct drm_backend *backend =
-		(struct drm_backend *)output->base.compositor->backend;
+		to_drm_backend(output->base.compositor);
 	struct drm_sprite *s;
 	struct drm_mode *mode;
 	int ret = 0;
@@ -727,9 +737,9 @@ err_pageflip:
 static void
 drm_output_start_repaint_loop(struct weston_output *output_base)
 {
-	struct drm_output *output = (struct drm_output *) output_base;
-	struct drm_backend *backend = (struct drm_backend *)
-		output_base->compositor->backend;
+	struct drm_output *output = to_drm_output(output_base);
+	struct drm_backend *backend =
+		to_drm_backend(output_base->compositor);
 	uint32_t fb_id;
 	struct timespec ts, tnow;
 	struct timespec vbl2now;
@@ -837,7 +847,7 @@ static void
 page_flip_handler(int fd, unsigned int frame,
 		  unsigned int sec, unsigned int usec, void *data)
 {
-	struct drm_output *output = (struct drm_output *) data;
+	struct drm_output *output = data;
 	struct timespec ts;
 	uint32_t flags = WP_PRESENTATION_FEEDBACK_KIND_VSYNC |
 			 WP_PRESENTATION_FEEDBACK_KIND_HW_COMPLETION |
@@ -911,7 +921,7 @@ drm_output_prepare_overlay_view(struct drm_output *output,
 				struct weston_view *ev)
 {
 	struct weston_compositor *ec = output->base.compositor;
-	struct drm_backend *b = (struct drm_backend *)ec->backend;
+	struct drm_backend *b = to_drm_backend(ec);
 	struct weston_buffer_viewport *viewport = &ev->surface->buffer_viewport;
 	struct wl_resource *buffer_resource;
 	struct drm_sprite *s;
@@ -1083,8 +1093,7 @@ static struct weston_plane *
 drm_output_prepare_cursor_view(struct drm_output *output,
 			       struct weston_view *ev)
 {
-	struct drm_backend *b =
-		(struct drm_backend *)output->base.compositor->backend;
+	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	struct weston_buffer_viewport *viewport = &ev->surface->buffer_viewport;
 	struct wl_shm_buffer *shmbuf;
 
@@ -1163,8 +1172,7 @@ drm_output_set_cursor(struct drm_output *output)
 {
 	struct weston_view *ev = output->cursor_view;
 	struct weston_buffer *buffer;
-	struct drm_backend *b =
-		(struct drm_backend *) output->base.compositor->backend;
+	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	EGLint handle;
 	struct gbm_bo *bo;
 	float x, y;
@@ -1217,9 +1225,8 @@ drm_output_set_cursor(struct drm_output *output)
 static void
 drm_assign_planes(struct weston_output *output_base)
 {
-	struct drm_backend *b =
-		(struct drm_backend *)output_base->compositor->backend;
-	struct drm_output *output = (struct drm_output *)output_base;
+	struct drm_backend *b = to_drm_backend(output_base->compositor);
+	struct drm_output *output = to_drm_output(output_base);
 	struct weston_view *ev, *next;
 	pixman_region32_t overlap, surface_overlap;
 	struct weston_plane *primary, *next_plane;
@@ -1304,9 +1311,8 @@ drm_output_fini_pixman(struct drm_output *output);
 static void
 drm_output_destroy(struct weston_output *output_base)
 {
-	struct drm_output *output = (struct drm_output *) output_base;
-	struct drm_backend *b =
-		(struct drm_backend *)output->base.compositor->backend;
+	struct drm_output *output = to_drm_output(output_base);
+	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	drmModeCrtcPtr origcrtc = output->original_crtc;
 
 	if (output->page_flip_pending) {
@@ -1405,8 +1411,8 @@ drm_output_switch_mode(struct weston_output *output_base, struct weston_mode *mo
 		return -1;
 	}
 
-	b = (struct drm_backend *)output_base->compositor->backend;
-	output = (struct drm_output *)output_base;
+	b = to_drm_backend(output_base->compositor);
+	output = to_drm_output(output_base);
 	drm_mode  = choose_mode (output, mode);
 
 	if (!drm_mode) {
@@ -1696,7 +1702,7 @@ drm_get_backlight(struct drm_output *output)
 static void
 drm_set_backlight(struct weston_output *output_base, uint32_t value)
 {
-	struct drm_output *output = (struct drm_output *) output_base;
+	struct drm_output *output = to_drm_output(output_base);
 	long max_brightness, new_brightness;
 
 	if (!output->backlight)
@@ -1736,9 +1742,9 @@ drm_get_prop(int fd, drmModeConnectorPtr connector, const char *name)
 static void
 drm_set_dpms(struct weston_output *output_base, enum dpms_enum level)
 {
-	struct drm_output *output = (struct drm_output *) output_base;
+	struct drm_output *output = to_drm_output(output_base);
 	struct weston_compositor *ec = output_base->compositor;
-	struct drm_backend *b = (struct drm_backend *)ec->backend;
+	struct drm_backend *b = to_drm_backend(ec);
 	int ret;
 
 	if (!output->dpms_prop)
@@ -2685,7 +2691,7 @@ drm_restore(struct weston_compositor *ec)
 static void
 drm_destroy(struct weston_compositor *ec)
 {
-	struct drm_backend *b = (struct drm_backend *) ec->backend;
+	struct drm_backend *b = to_drm_backend(ec);
 
 	udev_input_destroy(&b->input);
 
@@ -2741,7 +2747,7 @@ static void
 session_notify(struct wl_listener *listener, void *data)
 {
 	struct weston_compositor *compositor = data;
-	struct drm_backend *b = (struct drm_backend *)compositor->backend;
+	struct drm_backend *b = to_drm_backend(compositor);
 	struct drm_sprite *sprite;
 	struct drm_output *output;
 
@@ -2881,7 +2887,7 @@ recorder_frame_notify(struct wl_listener *listener, void *data)
 
 	output = container_of(listener, struct drm_output,
 			      recorder_frame_listener);
-	b = (struct drm_backend *)output->base.compositor->backend;
+	b = to_drm_backend(output->base.compositor);
 
 	if (!output->recorder)
 		return;
@@ -3018,7 +3024,7 @@ renderer_switch_binding(struct weston_keyboard *keyboard, uint32_t time,
 			uint32_t key, void *data)
 {
 	struct drm_backend *b =
-		(struct drm_backend *) keyboard->seat->compositor;
+		to_drm_backend(keyboard->seat->compositor);
 
 	switch_to_gl_renderer(b);
 }
-- 
1.9.1

