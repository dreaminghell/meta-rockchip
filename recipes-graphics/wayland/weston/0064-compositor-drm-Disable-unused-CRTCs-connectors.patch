From c38d483563f3b24f2b29561a5c6a4bc42e6b661b Mon Sep 17 00:00:00 2001
From: Daniel Stone <daniels@collabora.com>
Date: Thu, 16 Feb 2017 17:02:11 +0000
Subject: [PATCH 64/94] compositor-drm: Disable unused CRTCs/connectors

If we have an unused CRTC or connector, explicitly disable it during the
end of the repaint cycle, or when we get VT-switched back in.

Signed-off-by: Daniel Stone <daniels@collabora.com>
---
 src/compositor-drm.c | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/src/compositor-drm.c b/src/compositor-drm.c
index 11623de..8e3876f 100644
--- a/src/compositor-drm.c
+++ b/src/compositor-drm.c
@@ -190,6 +190,7 @@ struct drm_backend {
 
 	void *repaint_data;
 
+	bool state_invalid;
 	struct wl_array unused_connectors;
 	struct wl_array unused_crtcs;
 
@@ -389,6 +390,26 @@ static struct gl_renderer_interface *gl_renderer;
 
 static const char default_seat[] = "seat0";
 
+static void
+wl_array_remove_uint32(struct wl_array *array, uint32_t elm)
+{
+	uint32_t *pos, *end;
+
+	end = (uint32_t *) ((char *) array->data + array->size);
+
+	wl_array_for_each(pos, array) {
+		if (*pos != elm)
+			continue;
+
+		array->size -= sizeof(*pos);
+		if (pos + 1 == end)
+			break;
+
+		memmove(pos, pos + 1, (char *) end -  (char *) (pos + 1));
+		break;
+	}
+}
+
 static inline struct drm_output *
 to_drm_output(struct weston_output *base)
 {
@@ -1927,6 +1948,18 @@ drm_repaint_flush(struct weston_compositor *compositor, void *repaint_data)
 	struct drm_backend *b = to_drm_backend(compositor);
 	struct drm_pending_state *pending_state = repaint_data;
 	struct drm_output_state *output_state, *tmp;
+	uint32_t *unused;
+
+	if (b->state_invalid) {
+		/* If we need to reset all our state (e.g. because we've
+		 * just started, or just been VT-switched in), explicitly
+		 * disable all the CRTCs we aren't using. This also disables
+		 * all connectors on these CRTCs, so we don't need to do that
+		 * separately with the pre-atomic API. */
+		wl_array_for_each(unused, &b->unused_crtcs)
+			drmModeSetCrtc(b->drm.fd, *unused, 0, 0, 0, NULL, 0,
+				       NULL);
+	}
 
 	wl_list_for_each_safe(output_state, tmp, &pending_state->output_list,
 			      link) {
@@ -1934,6 +1967,8 @@ drm_repaint_flush(struct weston_compositor *compositor, void *repaint_data)
 					DRM_OUTPUT_STATE_UPDATE_ASYNCHRONOUS);
 	}
 
+	b->state_invalid = false;
+
 	drm_pending_state_free(pending_state);
 	b->repaint_data = NULL;
 }
@@ -2491,6 +2526,7 @@ drm_output_destroy(struct weston_output *output_base)
 	struct drm_output *output = to_drm_output(output_base);
 	struct drm_backend *b = to_drm_backend(output->base.compositor);
 	drmModeCrtcPtr origcrtc = output->original_crtc;
+	uint32_t *unused;
 
 	if (output->page_flip_pending) {
 		output->destroy_pending = 1;
@@ -2519,6 +2555,11 @@ drm_output_destroy(struct weston_output *output_base)
 	drm_output_state_free(output->state_cur);
 	output->state_cur = NULL;
 
+	unused = wl_array_add(&b->unused_connectors, sizeof(*unused));
+	*unused = output->connector_id;
+	unused = wl_array_add(&b->unused_crtcs, sizeof(*unused));
+	*unused = output->crtc_id;
+
 	weston_output_destroy(&output->base);
 
 	free(output);
@@ -3902,6 +3943,9 @@ create_output_for_connector(struct drm_backend *b,
 	output->base.native_mode = output->base.current_mode;
 	output->base.native_scale = output->base.current_scale;
 
+	wl_array_remove_uint32(&b->unused_crtcs, output->crtc_id);
+	wl_array_remove_uint32(&b->unused_connectors, output->connector_id);
+
 	return 0;
 
 err_output:
@@ -4209,6 +4253,7 @@ session_notify(struct wl_listener *listener, void *data)
 		weston_log("activating session\n");
 		weston_compositor_wake(compositor);
 		weston_compositor_damage_all(compositor);
+		b->state_invalid = true;
 		udev_input_enable(&b->input);
 	} else {
 		weston_log("deactivating session\n");
@@ -4504,6 +4549,7 @@ drm_backend_create(struct weston_compositor *compositor,
 	if (b == NULL)
 		return NULL;
 
+	b->state_invalid = true;
 	wl_array_init(&b->unused_crtcs);
 	wl_array_init(&b->unused_connectors);
 
-- 
1.9.1

